import groovyx.net.http.HTTPBuilder

import static groovyx.net.http.ContentType.JSON
import static groovyx.net.http.Method.GET
import static groovyx.net.http.Method.POST

buildscript {
    repositories {
        mavenRepo(url: 'http://jcenter.bintray.com')
    }
    dependencies {
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.6'
    }
}

allprojects {
    apply plugin: 'idea'

    group = 'org.jfrog.example.bintray.gradle'
    version = '1.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    dependencies {
        testCompile 'junit:junit:4.7'
    }

    // custom tasks for creating source/javadoc jars
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // add javadoc/source jar tasks as artifacts
    artifacts {
        archives sourcesJar, javadocJar
    }

    repositories {
        mavenRepo(url: 'http://jcenter.bintray.com')
    }

    task createBintrayPackage << {
        def http = getHttpBuilder()
        http.request(GET, JSON) {
            uri.path = '/packages/' + bintray_username + '/' + bintray_repo + '/' + bintray_package
            response.'404' = {
                http = getHttpBuilder()
                http.request(POST, JSON) {
                    uri.path = '/packages/' + bintray_username + '/' + bintray_repo
                    body = [name: bintray_package, desc: 'auto', desc_url: 'auto', labels: ['gradle', 'example']]

                    response.success = { resp ->
                        println 'Created!!!'
                    }
                }
            }
        }
    }

    //NOTE: Please use java 1.7 to avoid http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6459815      
    uploadArchives {
      repositories {
        mavenDeployer {
          repository(url: "${bintray_api_base_url}/maven/${bintray_username}/${bintray_repo}/${bintray_package}") {
            authentication(userName: bintray_username, password: bintray_api_key)
          }
        }
      }
    }

    uploadArchives.dependsOn createBintrayPackage
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.5'
}

def getHttpBuilder() {
    def http = new HTTPBuilder(bintray_api_base_url)
    http.auth.basic bintray_username, bintray_api_key
    return http
}
